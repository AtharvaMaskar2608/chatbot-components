from openai import OpenAI

client = OpenAI()

def check_greeting(transcript: str) -> bool:
    """
    Description: This function checks if the agent has greeted the client

    parameter:
        - transcript (str): Transcript in the text format
    
    returns:
        - didGreet (bool): Returns true if the agent has greeted, returns false if the agent hasn't greeted. 
    """


    system_prompt = f"You are a hindi sales call analyzer. Your job is to ensure that the agent that picks up the call is following his tasks well. You will be given a transcript, you have to tell if the agent has greeted the client. Eg: Hello sir, good morning/evening/afternoon sir, how may I help you (All these are in hindi just the prompt is in English) basically any greeting in Hindi. If he does return 1 else he doesnt return 0. Only return 0 ir 1. KEep in mind that the transcript is generated by an api and sometimes might exchange agent's and client's dialogues. So make sure you approach it with common sense as in the what the agent might be saying and what the customer is saying. So if any speaker says something like Hello sir or Hello sir how may I help you, I think you can consider it as greeted. Do not be very strict when it comes to this. Just return a score of 0, 1 or 2 without any explanation"

    user_prompt = f"{transcript} did user greet? Just return 1 if he does, 0 if he doesn't"


    completion = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ]
    )

    return completion.choices[0].message.content


def check_empathy(transcript: str) -> int:
    """
    Description:
        - This function checks if the agent was empathetic towards the client. 
    parameter:
        - transcript (str): call transcript
    returns:
        - emapthy_score (int): Empathy score on a scale of 0 - 2. 0 - Not empathetic, 1 - Neutral, 2 - Empathetic
    """

    system_prompt = """You are a professional Indian call manager, your job is to go through the call recording transcripts in Hindi and ensure that the agent was empathetic towards the customer. You have to consider both the Agent's dialogues as well as the customer's dialogues and mark the call recording on a scale of 0 to 2. 

    Here's how you can mark the call:

    Marking for 2 (One or more than one should match):
    - The call went smoothly. 
    - Both the agent and customer were polite, positive and communicated effectively. 
    - The customer's query was resolved satisfactorily on the call.
    - Consider overall conversation of the transcript. 

    Marking for 1:
    - The call cannot be classfied into 0 or 2.
    
    Marking for 0 (Even if one matches):
    - The call is disconnected either by the customer or the agent aprubtly without the issue being solved.
    - The agent quickly redirected the customer to email without addressing their concerns adequately on the call.
    - The call was placed on hold for an extended period (indicated in the transcript).
    - The agent's behavior was rude, impatient, uninterested, impolite.
    - Agent was interupting the customer while speaking. 
    - The agent ghosted the customer and did not reply. 
    - The agent failed to provide clear guidance or misunderstood the customer's queries and there were communication gaps between the customer and the agent.
    - The agent blamed the customer or showed impatience instead of focusing on solutions.
    - The agent did not talk in the same language as the customer. that is, if the customer talked in English the agent talked in Hindi. 
    - The agent does not resolve the problem on the call. 
    - The cutomer does not receive any satisfactory solution. 
    - The agent struggles to provide clear instructions and there was confustion and misunderstanding. 
    - The customer get's frustrated because of the agent.
    - The customer seemed uninterested and lazy while answering the call.


    From the above sitatuations, mark call transcripts for any other situations you might come accross with more accuracy. Reply with only 0, 1 or 2 without giving any explanation or other text.
    """

    user_prompt = f"{transcript}, check how empathetic the agent was towards the client on a scale of 0 to 2"


    completion = client.chat.completions.create(
        temperature=0,
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ]
    )

    return int(completion.choices[0].message.content)

def check_closure(transcript: str) -> int:
    """
    Description: This function checks if the agent gave a proper closure to the client during the call. 

    parameters: 
        - tranascript (str): Call transcript

    returns: 
        - closure_score (int): Returns 0 if the agent did not give a proper closure, and returns 1 if he gave a closure.         
    """

    system_prompt = """You are a professional HINDI sales call analyzer. Your job is to make sure that the agent wished the client well before ending the call. 
    Eg:  Can I assist you with anything else? Thank you sir have a nice day? Is there anything you need help with? etc. 
    You will be given a hindi transcript and have to return 1 if the agent did the closure well and return 0 if the agent did not say anything in the closure. basically any closure asking clients/customers if they need anything else in hindi.Only reply in 1 and 0 nothing else."""

    user_prompt = f"{transcript}. IN this given transcript, does the agent thank for calling"

    completion = client.chat.completions.create(
        temperature=0,
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ]
    )

    return int(completion.choices[0].message.content)

def generate_sumary(transcript: str, agentName: str) -> str:
    """
    Description: This function generates summary for a given transcript. 
    parameters: 
        - transcript (str): Call transcript
    returns:
        - summary (str): Summary generated by open AI
    """

    system_prompt = f"You are a professional Indian hindi sales call analyzer. Your work is to summarize a call and cover the following topics. Every call is an incoming call from the client to the company agent named {agentName}. In your summary cover the following .1. Who called whom. 2. Problem of the client 3. What did the Agent do to solve the problem. 3. Did he solve it properly 4. What were the problems faced during the calls. On the above paramteres generate a summary of the call in English."

    user_prompt = f"{transcript}, for the given transcript generate a summary. "

    completion = client.chat.completions.create(
        temperature=0,
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ]
    )

    return completion.choices[0].message.content

if __name__ == "__main__":
    trans = """Summary: The call was from the customer, Mr. Upadhyay, to the agent Ambika at Choice Phoenix. The customer had an issue with his trades where he was not able to see the profit amount for 2 out of 3 trades he made that day. The agent tried to explain to the customer about the profit showing up on the next day and the process of receiving the profit. However, the customer seemed to have difficulty understanding the concept and faced challenges in comprehending the agent's explanations. The customer also mentioned facing issues with withdrawals not reflecting in his account and not being able to withdraw the amount he had traded. The agent tried to reassure the customer and guide him on the process of receiving profits and withdrawals. Overall, the call seemed to have communication challenges and the customer was struggling to grasp the agent's explanations regarding his trading issues."""

    print(check_empathy(trans))